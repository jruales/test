name: apache/zookeeper
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  mvn:
    strategy:
      matrix:
        profile:
        - name: full-build-jdk8
          jdk: 8
          args: -Pfull-build apache-rat:check verify -DskipTests spotbugs:check checkstyle:check
        - name: full-build-jdk11
          jdk: 11
          args: -Pfull-build apache-rat:check verify -DskipTests spotbugs:check checkstyle:check
        - name: full-build-java-tests
          jdk: 11
          args: -Pfull-build verify -Dsurefire-forkcount=1 -DskipCppUnit -Dsurefire.rerunFailingTestsCount=5
        - name: full-build-cppunit-tests
          jdk: 11
          args: -Pfull-build verify -Dtest=_ -DfailIfNoTests=false
      fail-fast: false
    timeout-minutes: 360
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up JDK ${{ matrix.profile.jdk }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.profile.jdk }}
        distribution: temurin
    - name: Cache local maven repository
      uses: actions/cache@v3
      with:
        path: >
          ~/.m2/repository/

          !~/.m2/repository/org/apache/zookeeper
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Show the first log message
      run: git log -n1
    - name: Install C Dependencies
      run: |
        sudo apt update

        sudo apt install -y libcppunit-dev libsasl2-dev
    - name: Build with Maven (${{ matrix.profile.name }})
      run: mvn -B -V -e -ntp "-Dstyle.color=always" ${{ matrix.profile.args }}
      env:
        MAVEN_OPTS: -Djansi.force=true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Upload unit test results (ces) (ces)
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: surefire-reports-${{ matrix.profile.name }}
        path: ./**/target/surefire-reports/
        if-no-files-found: ignore
    - name: Upload integration test results (ces)
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: failsafe-reports-${{ matrix.profile.name }}
        path: ./**/target/failsafe-reports/
        if-no-files-found: ignore
