name: harfbuzz/harfbuzz
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
jobs:
  msys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - MSYSTEM: MINGW32
          MSYS2_ARCH: i686
        - MSYSTEM: MINGW64
          MSYS2_ARCH: x86_64
    name: ${{ matrix.MSYSTEM }}
    env:
      MSYS: winjitdebug
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup MSYS2
      uses: msys2/setup-msys2@cf96e00c0aab3788743aaf63b64146f0d383cee9
      with:
        msystem: ${{ matrix.MSYSTEM }}
        update: true
        install: mingw-w64-${{ matrix.MSYS2_ARCH }}-cairo mingw-w64-${{ matrix.MSYS2_ARCH }}-freetype mingw-w64-${{ matrix.MSYS2_ARCH }}-gcc mingw-w64-${{ matrix.MSYS2_ARCH }}-gcc-libs mingw-w64-${{ matrix.MSYS2_ARCH }}-gettext mingw-w64-${{ matrix.MSYS2_ARCH }}-glib2 mingw-w64-${{ matrix.MSYS2_ARCH }}-gobject-introspection mingw-w64-${{ matrix.MSYS2_ARCH }}-graphite2 mingw-w64-${{ matrix.MSYS2_ARCH }}-icu mingw-w64-${{ matrix.MSYS2_ARCH }}-meson mingw-w64-${{ matrix.MSYS2_ARCH }}-ninja mingw-w64-${{ matrix.MSYS2_ARCH }}-pkg-config mingw-w64-${{ matrix.MSYS2_ARCH }}-python mingw-w64-${{ matrix.MSYS2_ARCH }}-python-pip
    - name: Remove installed HarfBuzz DLLs
      run: |
        rm -f -v /ming*/bin/libharfbuzz-*.dll
    - name: Install Python Dependencies
      run: |
        pip3 install -r .ci/requirements-fonttools.txt --require-hashes
    - name: Setup Meson
      run: |
        meson setup build \
          --wrap-mode=nodownload \
          --auto-features=enabled \
          -Ddocs=disabled \
          -Ddirectwrite=enabled \
          -Dgdi=enabled \
          -Dgraphite=enabled \
          -Dchafa=disabled
    - name: Build
      run: meson compile -Cbuild
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      run: meson test --print-errorlogs --suite=harfbuzz -Cbuild
    - name: Upload DLLs
      if: always()
      uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b
      with:
        name: libharfbuzz-${{ matrix.MSYS2_ARCH }}
        path: ./build/src/libharfbuzz-*.dll
