name: laravel-frontend-presets/tall
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
        - 8.2
        laravel:
        - 11.0
    name: P${{ matrix.php }} - L${{ matrix.laravel }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.composer/cache/files
        key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite
        coverage: none
    - name: Create Laravel app
      run: composer create-project laravel/laravel=${{ matrix.laravel }} ../app --prefer-dist
    - name: Install dependencies
      run: |
        cd ../app

        composer require livewire/livewire:^3.4

        composer config repositories.local '{"type": "path", "url": "../tall"}' --file composer.json

        composer require laravel-frontend-presets/tall:@dev
    - name: Install preset
      run: |
        cd ../app

        php artisan ui tall --auth
    - name: Overwrite configuration
      run: |
        cd ../app

        rm phpunit.xml

        cp ../tall/.github/workflows/phpunit.xml.stub ./phpunit.xml
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Execute tests (ces) (ces)
      run: |
        cd ../app

        vendor/bin/phpunit
