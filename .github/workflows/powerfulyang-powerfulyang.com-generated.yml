name: powerfulyang/powerfulyang.com
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  Test:
    name: Test and TSC check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version:
        - lts/*
        os:
        - ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: pnpm
        cache-dependency-path: pnpm-lock.yaml
    - name: Install
      run: pnpm install
    - name: Get number of CPU cores
      id: cpu-cores
      uses: SimenB/github-actions-cpu-cores@v1
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      run: pnpm run test --max-workers ${{ steps.cpu-cores.outputs.count }}
    - name: TSC check
      run: pnpm run tsc-check
  Build:
    name: Docker build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        docker-repository-qa:
        - powerfulyang/powerfulyang.com:beta
        docker-repository-prod:
        - powerfulyang/powerfulyang.com:latest
        os:
        - ubuntu-latest
    needs: Test
    if: true
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build prod source
      uses: docker/build-push-action@v4
      with:
        file: Dockerfile
        push: true
        tags: ${{ matrix.docker-repository-prod }}
        build-args: >
          BUILD_ENV=prod
        secrets: >
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
      if: startsWith(github.event.head_commit.message, 'build:')
    - name: Deploy prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script_stop: true
        script: >
          docker pull ${{ matrix.docker-repository-prod }}

          cd ~/applications

          docker-compose up -d --force-recreate powerfulyang.com

          docker image prune -a -f
      if: startsWith(github.event.head_commit.message, 'build:')
