name: spring-projects/spring-boot
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  ci:
    name: ${{ matrix.os.name}} | Java ${{ matrix.java.version}}
    runs-on: ${{ matrix.os.id }}
    if: true
    strategy:
      matrix:
        os:
        - id: ubuntu-latest
          name: Linux
        - id: windows-latest
          name: Windows
        java:
        - version: 17
          toolchain: false
        - version: 21
          toolchain: true
        - version: 22
          toolchain: true
        exclude:
        - os:
            name: Linux
          java:
            version: 17
    steps:
    - name: Prepare Windows runner
      if: ${{ runner.os == 'Windows' }}
      run: |
        git config --global core.autocrlf true

        git config --global core.longPaths true

        Stop-Service -name Docker
    - name: Check Out Code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Build
      id: build
      uses: ./.github/actions/build
      with:
        java-version: ${{ matrix.java.version }}
        java-distribution: ${{ matrix.java.distribution || 'liberica' }}
        java-toolchain: ${{ matrix.java.toolchain }}
        develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}
    - name: Send Notification
      uses: ./.github/actions/send-notification
      if: always()
      with:
        webhook-url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
        status: ${{ job.status }}
        build-scan-url: ${{ steps.build.outputs.build-scan-url }}
        run-name: ${{ format('{0} | {1} | Java {2}', github.ref_name, matrix.os.name, matrix.java.version) }}
