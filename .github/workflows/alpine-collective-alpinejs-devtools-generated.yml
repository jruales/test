name: alpine-collective/alpinejs-devtools
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 14.x
    env:
      CI: true
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: install
      run: npm ci
      env:
        CYPRESS_INSTALL_BINARY: 0
    - name: build
      run: npm run package
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: alpine-devtools
        path: dist
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: unit tests (ces) (ces)
      run: npm t
    - name: check formatting
      run: npm run format
    - name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply formatting changes
    - run: npx cypress cache path && npx cypress cache list
    - name: Cache Cypress
      id: cache-cypress
      uses: actions/cache@v1
      with:
        path: ~/.cache/Cypress
        key: cypress-cache-v1-${{ runner.os }}-${{ hashFiles('**/package.json') }}
    - run: npx cypress install && npx cypress cache list
    - uses: cypress-io/github-action@v2
      with:
        start: npm run start:ci
        command: npm run cy:run
        install: false
