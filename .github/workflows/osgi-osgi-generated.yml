name: osgi/osgi
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  LC_ALL: en_US.UTF-8
  GRADLE_OPTS: -Dorg.gradle.parallel=true -Dmaven.repo.local=cnf/generated/m2
  canonical: ${{ (github.repository == 'osgi/osgi') && ((github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/release')) && (github.event_name != 'pull_request') }}
  java_version: 17
defaults:
  run:
    shell: bash
permissions:
  contents: read
jobs:
  build:
    name: Artifacts
    runs-on: ubuntu-latest
    outputs:
      tck-matrix: ${{ steps.build.outputs.tck-matrix }}
    steps:
    - name: Git Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Git Unshallow
      if: ${{ fromJSON(env.canonical) }}
      run: |
        git fetch --prune --unshallow

        git describe --dirty --always --abbrev=9
    - name: Set up Java
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: ${{ env.java_version }}
    - name: Build
      id: build
      uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        arguments: --continue :buildscriptDependencies :build
    - name: Upload TCK
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: OSGi-TCK
        if-no-files-found: error
        path: >
          osgi.tck/generated/osgi.tck.*/

          !osgi.tck/generated/osgi.tck.*.jar
    - name: Configure settings.xml for Publish
      if: ${{ fromJSON(env.canonical) }}
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: ${{ env.java_version }}
        server-id: ossrh
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
    - name: Create Staging Repository
      if: ${{ fromJSON(env.canonical) && (github.ref == 'refs/heads/release') }}
      run: |
        ./.github/scripts/cistaging.sh org.osgi
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
    - name: Publish
      id: publish
      if: ${{ fromJSON(env.canonical) }}
      uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        arguments: :publish
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSSRH_RELEASE: ${{ env.OSSRH_STAGINGREPOSITORY_org_osgi }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
    - name: Upload Generated Repo
      if: ${{ fromJSON(env.canonical) }}
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: OSGi-Generated-Repo
        path: >
          cnf/generated/repo/
  spec:
    name: Specification
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Java
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: ${{ env.java_version }}
    - name: Build
      id: build
      uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        arguments: --continue :osgi.specs:specifications
    - name: Upload Specification HTML
      if: ${{ fromJSON(env.canonical) || ((github.repository != 'osgi/osgi') && (github.event_name != 'pull_request')) }}
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: OSGi-Specification-HTML
        path: osgi.specs/generated/html/
    - name: Upload Specification PDF
      if: ${{ fromJSON(env.canonical) }}
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: OSGi-Specification-PDF
        path: osgi.specs/generated/*.pdf
  gh_pages:
    if: true
    needs: spec
    name: GitHub Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download Specification HTML
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
      with:
        name: OSGi-Specification-HTML
        path: osgi.specs/generated/html
    - name: Publish Specification HTML
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: osgi.specs/generated/html
        force_orphan: true
  tck:
    permissions:
      contents: none
    needs: build
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build.outputs.tck-matrix) }}
    name: TCK ${{ matrix.tck }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up Java
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: ${{ env.java_version }}
    - name: Download TCK
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
      with:
        name: OSGi-TCK
    - name: Run TCK
      id: tck
      run: |
        cd osgi.tck.${{ matrix.book }}

        java -jar jar/bnd.jar --exceptions runtests --title ${{ matrix.tck }} --reportdir reports/${{ matrix.tck }} ${{ matrix.tck }}.bnd
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Upload TCK Test Reports (ces) (ces)
      if: ${{ always() && ((steps.tck.outcome == 'success') || (steps.tck.outcome == 'failure')) }}
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: TCK-${{ matrix.tck }}-reports
        path: >
          osgi.tck.${{ matrix.book }}/reports/
