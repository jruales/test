name: Code Execution - synthetic - dotnet

on:
   workflow_dispatch:
    inputs:
      test:
        description: 'Base64 encoded JSON blob of test files'
        required: false
        default: ''
      source:
        description: 'Base64 encoded JSON blob of files to be tested'
        required: false
        default: ''

jobs:
  run-CodeSnippet:
    runs-on: ubuntu-latest
    container:
      #image: mcr.microsoft.com/vscode/devcontainers/universal:2-linux  # Specify your container image
      image: mcr.microsoft.com/vscode/devcontainers/dotnet:8.0  # Specify your container image
      options: --privileged  # Optional: Use if your container needs privileged mode

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setting up Python because the default Python 3.11 installation within the container image was having
      # some issues (couldn't import the built-in module 'json', for some reason).
      #
      # Note that both the `python` and `python3` commands will invoke the same Python version installed in this step.
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # - name: Print python3 version
      #   run: python3 --version
      
      # - name: Print python version
      #   run: python --version

      # Decode the source files and test files and save them to the source/ and test/ folder
      
      - name: Unpack source and test files
        shell: bash
        run: |
              # Write a Python script to expand base 64 encoded JSON file system
              # into individual files in a "bin" directory.
              SOURCE="${{ github.event.inputs.source }}"
              TEST="${{ github.event.inputs.test }}"

              cat << 'EOF' > fileSystemExpansion.py
              import sys
              import os
              import base64
              import json

              def main():
                  output_dir = sys.argv[1]
                  encoded_json = sys.argv[2]
                  decoded_json = base64.b64decode(encoded_json).decode('utf-8')
                  file_system = json.loads(decoded_json)

                  os.makedirs(output_dir, exist_ok=True)

                  for file_name, file_content in file_system.items():
                      file_path = os.path.join(output_dir, file_name)
                      with open(file_path, 'w') as file:
                          file.write(file_content)

              if __name__ == "__main__":
                 main()
              EOF

              python3 fileSystemExpansion.py source "$SOURCE"
              python3 fileSystemExpansion.py test "$TEST"



      - name: Create Test project
        shell: bash
        run: |
              mkdir -p csTest

              cat << 'EOF' > csTest/csTest.csproj
              <Project Sdk="Microsoft.NET.Sdk">

                <PropertyGroup>
                  <TargetFramework>net8.0</TargetFramework>
                  <ImplicitUsings>enable</ImplicitUsings>
                  <Nullable>enable</Nullable>

                  <IsPackable>false</IsPackable>
                  <IsTestProject>true</IsTestProject>
                </PropertyGroup>

                <ItemGroup>
                  <ProjectReference Include="..\cs\ConsoleApp.csproj" />
                </ItemGroup>

                <ItemGroup>
                  <PackageReference Include="coverlet.collector" Version="6.0.0" />
                  <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />

                  <!-- xUnit -->
                  <PackageReference Include="xunit" Version="2.5.3" />
                  <PackageReference Include="xunit.runner.visualstudio" Version="2.5.3" />
                  
                  <!-- NUnit -->
                  <PackageReference Include="NUnit" Version="3.14.0" />
                  <PackageReference Include="NUnit.Analyzers" Version="3.9.0" />
                  <PackageReference Include="NUnit3TestAdapter" Version="4.5.0" />
                  
                  <!-- MSTest -->
                  <PackageReference Include="MSTest.TestAdapter" Version="3.1.1" />
                  <PackageReference Include="MSTest.TestFramework" Version="3.1.1" />
                </ItemGroup>

              </Project>
              EOF

      - name: Run code snippet (ces)
        shell: bash
        run: |
              # Copy the source and test files to the cs/ folder
              # Note, using `|| true` to prevent the commands from fatally failing if the source/ or test/ folders are empty or don't exist
              cp -rf source/* cs/ || true
              cp -rf test/* csTest/ || true
              echo "Contents of the cs/ folder:"
              ls cs/

      - name: Run code (ces)
        shell: bash
        run: |
              export PATH="$PATH:/github/home/.dotnet/tools"
              # cd cs
              # echo "Doing build:"
              # echo "========================"
              # dotnet build
              # # echo  "======================="
              cd csTest
              echo "Running tests:"
              echo  "======================="
              dotnet test

              echo "========================"
              echo "!!== RUN COMPLETED ==!!"
              echo "End devContainer run"

