name: BrainJS/Brain.js
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node:
        - 18.x
        - 20.x
        - 22.x
        os:
        - ubuntu-latest
        - windows-latest
        - macOS-latest
        exclude:
        - os: macos-latest
          node: 18.x
        - os: macos-latest
          node: 20.x
        - os: macos-latest
          node: 22.x
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: npm
    - if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install -y build-essential libglew-dev libglu1-mesa-dev libxi-dev pkg-config

        ls /usr/include/c++/

        # export CXXFLAGS='-include /usr/include/c++/11.2.0/limits'
    - name: Install deps and build (with cache)
      run: |
        touch ./dist

        rm package-lock.json

        npm i
    - name: Lint
      run: npm run lint
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      run: |
        # TODO: Remove the disabling of the following files.

        mv src/neural-network-gpu.end-to-end.test.ts src/neural-network-gpu.end-to-end.test.ts.DISABLED

        mv src/neural-network.bitwise.test.ts src/neural-network.bitwise.test.ts.DISABLED

        mv src/neural-network.trainopts.test.ts src/neural-network.trainopts.test.ts.DISABLED

        mv src/recurrent.end-to-end.test.ts src/recurrent.end-to-end.test.ts.DISABLED

        mv src/recurrent/gru.test.ts src/recurrent/gru.test.ts.DISABLED

        mv src/recurrent/lstm-time-step.end-to-end.test.ts src/recurrent/lstm-time-step.end-to-end.test.ts.DISABLED

        mv src/recurrent/lstm.test.ts src/recurrent/lstm.test.ts.DISABLED

        mv src/recurrent/rnn-time-step.test.ts src/recurrent/rnn-time-step.test.ts.DISABLED

        mv src/recurrent/rnn.test.ts src/recurrent/rnn.test.ts.DISABLED

        npm run test --ci --coverage --maxWorkers=2
    - name: Build
      run: npm run build
    - name: Codecov
      uses: codecov/codecov-action@v3
