name: pytest-dev/pytest
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  PYTEST_ADDOPTS: --color=yes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: {}
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Build and Check Package
      uses: hynek/build-and-inspect-python-package@v2.7.0
  build:
    needs:
    - package
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        name:
        - windows-py38
        - windows-py38-pluggy
        - windows-py39
        - windows-py310
        - windows-py311
        - windows-py312
        - windows-py313
        - ubuntu-py38
        - ubuntu-py38-pluggy
        - ubuntu-py38-freeze
        - ubuntu-py39
        - ubuntu-py310
        - ubuntu-py311
        - ubuntu-py312
        - ubuntu-py313
        - ubuntu-pypy3
        - macos-py38
        - macos-py39
        - macos-py310
        - macos-py312
        - macos-py313
        - doctesting
        - plugins
        include:
        - name: windows-py38
          python: 3.8
          os: windows-latest
          tox_env: py38-unittestextras
          use_coverage: true
        - name: windows-py38-pluggy
          python: 3.8
          os: windows-latest
          tox_env: py38-pluggymain-pylib-xdist
        - name: windows-py39
          python: 3.9
          os: windows-latest
          tox_env: py39-xdist
        - name: windows-py310
          python: 3.10
          os: windows-latest
          tox_env: py310-xdist
        - name: windows-py311
          python: 3.11
          os: windows-latest
          tox_env: py311
        - name: windows-py312
          python: 3.12
          os: windows-latest
          tox_env: py312
        - name: windows-py313
          python: 3.13-dev
          os: windows-latest
          tox_env: py313
        - name: ubuntu-py38
          python: 3.8
          os: ubuntu-latest
          tox_env: py38-lsof-numpy-pexpect
          use_coverage: true
        - name: ubuntu-py38-pluggy
          python: 3.8
          os: ubuntu-latest
          tox_env: py38-pluggymain-pylib-xdist
        - name: ubuntu-py38-freeze
          python: 3.8
          os: ubuntu-latest
          tox_env: py38-freeze
        - name: ubuntu-py39
          python: 3.9
          os: ubuntu-latest
          tox_env: py39-xdist
        - name: ubuntu-py310
          python: 3.10
          os: ubuntu-latest
          tox_env: py310-xdist
        - name: ubuntu-py311
          python: 3.11
          os: ubuntu-latest
          tox_env: py311
          use_coverage: true
        - name: ubuntu-py312
          python: 3.12
          os: ubuntu-latest
          tox_env: py312
          use_coverage: true
        - name: ubuntu-py313
          python: 3.13-dev
          os: ubuntu-latest
          tox_env: py313
          use_coverage: true
        - name: ubuntu-pypy3
          python: pypy-3.9
          os: ubuntu-latest
          tox_env: pypy3-xdist
        - name: macos-py38
          python: 3.8
          os: macos-latest
          tox_env: py38-xdist
        - name: macos-py39
          python: 3.9
          os: macos-latest
          tox_env: py39-xdist
          use_coverage: true
        - name: macos-py310
          python: 3.10
          os: macos-latest
          tox_env: py310-xdist
        - name: macos-py312
          python: 3.12
          os: macos-latest
          tox_env: py312-xdist
        - name: macos-py313
          python: 3.13-dev
          os: macos-latest
          tox_env: py313-xdist
        - name: plugins
          python: 3.12
          os: ubuntu-latest
          tox_env: plugins
        - name: doctesting
          python: 3.8
          os: ubuntu-latest
          tox_env: doctesting
          use_coverage: true
    continue-on-error: >-
      ${{
        contains(
          fromJSON(
            '[
              "windows-py38-pluggy",
              "windows-py313",
              "ubuntu-py38-pluggy",
              "ubuntu-py38-freeze",
              "ubuntu-py313",
              "macos-py38",
              "macos-py313"
            ]'
          ),
          matrix.name
        )
        && true
        || false
      }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Download Package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        check-latest: ${{ endsWith(matrix.python, '-dev') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

        pip install tox coverage
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test without coverage (ces) (ces)
      if: '! matrix.use_coverage'
      shell: bash
      run: tox run -e ${{ matrix.tox_env }} --installpkg `find dist/*.tar.gz`
    - name: Test with coverage (ces)
      if: matrix.use_coverage
      shell: bash
      run: tox run -e ${{ matrix.tox_env }}-coverage --installpkg `find dist/*.tar.gz`
    - name: Generate coverage report
      if: matrix.use_coverage
      run: python -m coverage xml
    - name: Upload coverage to Codecov
      if: matrix.use_coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        files: ./coverage.xml
        verbose: true
  check:
    if: true
    needs:
    - build
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@223e4bb7a751b91f43eda76992bcfbf23b8b0302
      with:
        jobs: ${{ toJSON(needs) }}
