name: default test

on:
   workflow_dispatch:
    inputs:
      patch:
        description: 'Base64 encoded patch content'
        required: false
        default: ''
      command:
        description: 'Base64 encoded command content'
        required: false
        default: ''
      ref:
        description: 'The branch, tag, or commit SHA to checkout'
        required: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        os: [ubuntu-22.04]
    steps:
    - name: Checkout specific version if ref is provided
      if: ${{ github.event.inputs.ref }}
      uses: actions/checkout@v4
      with:
        repository: psf/requests   
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout default branch if ref is not provided
      if: ${{ !github.event.inputs.ref }}
      uses: actions/checkout@v4
      with:
        repository: psf/requests
       
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        make        
    - name: Apply patch
      shell: bash
      run: |
          if [ -n "${{ github.event.inputs.patch }}" ]; then
            echo "Patch input provided. Applying patch..."
            echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff           
            echo "Decoded patch content:"
            cat patch.diff 
            echo "Apply the patch:"
            git apply patch.diff || {
              echo "Failed to apply patch"
              exit 1
            }
          else
            echo "No patch input provided. Skipping patch application."
          fi
          echo "Print git diff on local repo"
          git diff
    - name: Run custom command
      shell: bash
      run: |       
        if [ -n "${{ github.event.inputs.command }}" ]; then
           echo "Start running custom command"         
           echo "${{ github.event.inputs.command }}"
           output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
           echo "Decoded custom command is:"   
           echo $output
           echo "Command output:"   
           $output
           echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
           echo "Finished running command!"
        fi
    - name: Temp step
      run: |         
           echo "temp job"
    - name: Step to exit
      if: env.RAN_CUSTOM_COMMAND != 'true'
      run: |         
           echo "Exiting job"
           exit 1         
    - name: Run tests    
      if: env.RAN_CUSTOM_COMMAND != 'true'
      run: make ci
