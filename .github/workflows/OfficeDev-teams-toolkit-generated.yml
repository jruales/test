name: OfficeDev/teams-toolkit
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build-and-test:
    name: Build and Test OS "${{ matrix.os }}", Node.js "${{ matrix.node-version }}", Azure Functions Core Tools "${{ matrix.func-version }}", .NET SDK "${{ matrix.dotnet-version }}"
    strategy:
      matrix:
        os:
        - windows-latest
        - macos-11
        - ubuntu-latest
        node-version:
        - 18
        func-version:
        - none
        dotnet-version:
        - none
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node.js
      uses: actions/setup-node@v2.1.2
      with:
        node-version: 18
    - uses: pnpm/action-setup@v4
    - name: Setup project with Retry
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 3
        on_retry_command: git clean -fXd .
        command: >
          npm run setup
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Uninstalling .NET on Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        powershell -NoProfile -Command ./.github/env-checker/uninstall-dotnet.ps1
    - name: Uninstalling .NET on macOS or Ubuntu
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      run: |
        ./.github/env-checker/uninstall-dotnet.sh
    - name: Setup Azure Functions Core Tools For Linux
      if: ${{ runner.os == 'Linux' && matrix.func-version != 'none' }}
      run: |
        sudo npm install --unsafe-perm -g azure-functions-core-tools@${{ matrix.func-version }}
    - name: Setup Azure Functions Core Tools For Windows and macOS
      if: ${{ runner.os != 'Linux' && matrix.func-version != 'none' }}
      run: |
        npm install -g azure-functions-core-tools@${{ matrix.func-version }}
    - name: Setup .NET SDK
      if: ${{ matrix.dotnet-version != 'none' }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Integration Test with xvfb (ces) (ces)
      working-directory: ./packages/fx-core
      if: runner.os == 'Linux'
      run: |
        xvfb-run -a npm run test:env-checker
    - name: Integration Test (ces)
      working-directory: ./packages/fx-core
      if: runner.os != 'Linux'
      run: |
        npm run test:env-checker
