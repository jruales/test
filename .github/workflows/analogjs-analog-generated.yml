name: analogjs/analog
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  DOCS_APP_ARTIFACT_NAME: docs-app
  DOCS_APP_PATH: dist/apps/docs-app/
  NODE_OPTIONS: --max-old-space-size=6144
  VITE_ANALOG_PUBLIC_BASE_URL: ${{ vars.VITE_ANALOG_PUBLIC_BASE_URL || 'http://localhost:3000' }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true
jobs:
  prettier:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Validate
      run: pnpm exec prettier --check .
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Build
      run: pnpm build
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Build
      run: pnpm build
    - name: Verify
      run: more dist\apps\blog-app\analog\public\index.html
  unit:
    runs-on: ubuntu-latest
    needs:
    - build
    - build-windows
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      run: pnpm test
  e2e:
    runs-on: ubuntu-latest
    needs:
    - build
    - build-windows
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Install Playwright
      run: npx playwright install --with-deps
    - name: Install Cypress
      run: npx cypress install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: End-to-end test (ces) (ces)
      run: pnpm e2e
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
    - run: corepack enable
    - run: pnpm --version
    - uses: actions/setup-node@v3
      with:
        cache: pnpm
        cache-dependency-path: '**/pnpm-lock.yaml'
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Build
      run: pnpm exec nx build docs-app
    - name: Upload docs website
      if: github.event_name == 'push' && github.ref_name == 'beta'
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: ${{ env.DOCS_APP_ARTIFACT_NAME }}
        path: ${{ env.DOCS_APP_PATH }}
        retention-days: 1
  deploy-docs:
    name: '[Merge] Deploy docs website'
    needs:
    - build
    - build-windows
    - unit
    - e2e
    - docs
    if: true
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: >-
        ${{ github.workflow }}-deploy-docs-${{
          github.event_name == 'push'
            && github.ref
            || github.head_ref
        }}
      cancel-in-progress: ${{ github.event_name != 'push' }}
    steps:
    - name: Download docs website
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.DOCS_APP_ARTIFACT_NAME }}
        path: ${{ env.DOCS_APP_PATH }}
    - name: Set up GitHub Pages
      uses: actions/configure-pages@v1
    - name: Upload GitHub Pages-compatible tarball
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{ env.DOCS_APP_PATH }}
    - name: Deploy docs website tarball
      id: deploy
      uses: actions/deploy-pages@v1
