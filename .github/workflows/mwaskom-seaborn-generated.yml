name: mwaskom/seaborn
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
env:
  NB_KERNEL: python
  MPLBACKEND: Agg
  SEABORN_DATA: ${{ github.workspace }}/seaborn-data
  PYDEVD_DISABLE_FILE_VALIDATION: 1
jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.11
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
      with:
        python-version: 3.11
    - name: Install seaborn
      run: |
        pip install --upgrade pip

        pip install .[stats,docs]
    - name: Install pandoc
      run: |
        wget https://github.com/jgm/pandoc/releases/download/3.1.11/pandoc-3.1.11-1-amd64.deb

        sudo dpkg -i pandoc-3.1.11-1-amd64.deb
    - name: Cache datasets
      run: |
        git clone https://github.com/mwaskom/seaborn-data.git

        ls $SEABORN_DATA
    - name: Build docs
      env:
        SPHINXOPTS: -j `nproc`
      run: |
        cd doc

        make -j `nproc` notebooks

        make html
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
        - 3.8
        - 3.9
        - 3.10
        - 3.11
        - 3.12
        install:
        - full
        deps:
        - latest
        include:
        - python: 3.8
          install: full
          deps: pinned
        - python: 3.11
          install: light
          deps: latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
      with:
        python-version: ${{ matrix.python }}
        allow-prereleases: true
    - name: Install seaborn
      run: |
        pip install --upgrade pip wheel

        if [[ ${{matrix.install}} == 'full' ]]; then EXTRAS=',stats'; fi

        if [[ ${{matrix.deps }} == 'pinned' ]]; then DEPS='-r ci/deps_pinned.txt'; fi

        pip install .[dev$EXTRAS] $DEPS
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: make test
    - name: Upload coverage
      uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
      if: ${{ success() }}
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
    - name: Install tools
      run: pip install mypy~=1.10.0 flake8
    - name: Flake8
      run: make lint
    - name: Type checking
      run: make typecheck
