on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build_job:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.tl_name }}
    strategy:
      fail-fast: false
      matrix:
        tl_name:
        - i386-linux
        - x86_64-linux
        release_build:
        - ${{ startsWith(github.ref, 'refs/tags/') }}
        include:
        - tl_name: i386-linux
          image: i386/debian:buster
          platform: 386
          ci_build: true
          use_qemu: false
          buildsys: ubuntu
        - tl_name: x86_64-linux
          image: debian:buster
          platform: amd64
          ci_build: true
          use_qemu: false
          buildsys: ubuntu
    steps:
    - name: checkout-main
      uses: actions/checkout@v4
      with:
        path: repo
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup QEMU
      if: matrix.use_qemu
      uses: docker/setup-qemu-action@v3
      with:
        platforms: ${{ matrix.qemu_arch }}
    - name: build
      uses: addnab/docker-run-action@v3
      if: ${{ matrix.ci_build || matrix.release_build }}
      with:
        image: ${{ matrix.image }}
        options: -v ${{ github.workspace }}:/work --platform linux/${{ matrix.platform }}
        run: |
          cd /work/repo

          .github/scripts/build-asy.sh ${{ matrix.tl_name }} ${{ matrix.buildsys }}
    - name: find file step
      if: ${{ matrix.ci_build || matrix.release_build }}
      run: ls -l $GITHUB_WORKSPACE/repo/asy-${{ matrix.tl_name }}
    - name: save artifact
      if: ${{ matrix.ci_build || matrix.release_build }}
      uses: actions/upload-artifact@v4
      with:
        name: asy-${{ matrix.tl_name }}
        path: ${{ github.workspace }}/repo/asy-${{ matrix.tl_name }}
        compression-level: 0
    - name: Release
      uses: AButler/upload-release-assets@v3.0
      if: matrix.release_build
      with:
        files: ${{ github.workspace }}/repo/asy-${{ matrix.tl_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
  vm_build_job:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.arch }}-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch:
        - i386
        - amd64
        os:
        - freebsd
        release_build:
        - ${{ startsWith(github.ref, 'refs/tags/') }}
        include:
        - os: freebsd
          ci_build: true
    steps:
    - name: checkout-main
      uses: actions/checkout@v4
      with:
        path: repo
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: build freebsd
      uses: vmactions/freebsd-vm@v1
      if: ${{ matrix.os == 'freebsd' && (matrix.ci_build || matrix.release_build) }}
      with:
        release: 13.2
        usesh: true
        run: |
          cd repo

          sh .github/scripts/build-asy.sh ${{ matrix.arch }}-${{ matrix.os }} ${{ matrix.os }}
    - name: build solaris
      uses: vmactions/solaris-vm@v1
      if: ${{ matrix.os == 'solaris' && (matrix.ci_build || matrix.release_build) }}
      with:
        usesh: true
        release: 11.4-gcc
        run: |
          cd repo

          sh .github/scripts/build-asy.sh ${{ matrix.arch }}-${{ matrix.os }} ${{ matrix.os }}
    - name: find file step
      if: ${{ matrix.ci_build || matrix.release_build }}
      run: ls -l $GITHUB_WORKSPACE/repo/asy-${{ matrix.arch }}-${{ matrix.os }}
    - name: save artifact
      if: ${{ matrix.ci_build || matrix.release_build }}
      uses: actions/upload-artifact@v4
      with:
        name: asy-${{ matrix.arch }}-${{ matrix.os }}
        path: ${{ github.workspace }}/repo/asy-${{ matrix.arch }}-${{ matrix.os }}
        compression-level: 0
    - name: Release
      uses: AButler/upload-release-assets@v3.0
      if: matrix.release_build
      with:
        files: ${{ github.workspace }}/repo/asy-${{ matrix.arch }}-${{ matrix.os }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
name: TeX-Live/texlive-source
