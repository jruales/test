name: websockets/ws
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions: {}
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch:
        - x64
        - x86
        node:
        - 10
        - 12
        - 14
        - 16
        - 18
        - 20
        - 22
        os:
        - macOS-latest
        - ubuntu-latest
        - windows-latest
        exclude:
        - arch: x86
          os: macOS-latest
        - arch: x86
          os: ubuntu-latest
        - arch: x86
          node: 18
          os: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        architecture: ${{ matrix.arch }}
        cache: npm
        cache-dependency-path: ./package.json
    - run: npm install
    - run: npm run lint
      if: matrix.os == 'ubuntu-latest' && matrix.node == 20 && matrix.arch == 'x64'
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm test
    - run: |
        id=$(node -e "console.log(crypto.randomBytes(16).toString('hex'))")


        echo "job_id=$id" >> $GITHUB_OUTPUT
      id: get_job_id
      shell: bash
    - uses: coverallsapp/github-action@v2
      with:
        flag-name: ${{ steps.get_job_id.outputs.job_id }} (Node.js ${{ matrix.node }} ${{ matrix.arch }} on ${{ matrix.os }})
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
