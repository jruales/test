name: dacadeorg/dacade-frontend-app
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: 20.0.0
        cache: yarn
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Setup environment variables
      run: |
        echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_BUGSNAG_API_KEY=${{ secrets.NEXT_PUBLIC_BUGSNAG_API_KEY }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_SHOW_LANGUAGE_SELECTOR=${{ secrets.NEXT_PUBLIC_SHOW_LANGUAGE_SELECTOR }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_DISCORD_CLIENT_ID=${{ secrets.NEXT_PUBLIC_DISCORD_CLIENT_ID }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_DISCORD_CALLBACK_URL=${{ secrets.NEXT_PUBLIC_DISCORD_CALLBACK_URL }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_DISCORD_OAUTH_BASE_URL=${{ secrets.NEXT_PUBLIC_DISCORD_OAUTH_BASE_URL }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_DISCORD_SCOPE=${{ secrets.NEXT_PUBLIC_DISCORD_SCOPE }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_GOOGLE_TRANSLATE_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_TRANSLATE_API_KEY }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_BLOCK_EXPLORER_URL=${{ secrets.NEXT_PUBLIC_BLOCK_EXPLORER_URL }}" >> $GITHUB_ENV

        echo "NEXT_PUBLIC_IPFS_URL=${{ secrets.NEXT_PUBLIC_IPFS_URL }}" >> $GITHUB_ENV
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: yarn test
