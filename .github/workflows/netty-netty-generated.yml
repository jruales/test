name: netty/netty
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=240
permissions: read-all
jobs:
  tests:
    permissions:
      actions: read
      checks: write
      pull-requests: read
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ignore-if-missing:
        - false
        include:
        - setup: linux-x86_64-java8
          ignore-if-missing: true
        - setup: linux-x86_64-java11
        - setup: linux-x86_64-java11-boringssl
        - setup: linux-x86_64-java17
        - setup: linux-x86_64-java18
        - setup: linux-x86_64-java21
        - setup: linux-x86_64-java22
        - setup: windows-x86_64-java11-boringssl
    continue-on-error: ${{ matrix.ignore-if-missing }}
    steps:
    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v3.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: ${{ github.event.workflow_run.workflow_id }}
        workflow_conclusion: completed
        commit: ${{ github.event.workflow_run.head_commit.id }}
        name: test-results-${{ matrix.setup }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply patch.diff || {
                     echo "Failed to apply patch"
                     exit 1
                   }
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"   
                   echo $output
                   echo "Command output:" 
                   $output
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running command!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Publish Test Report (ces) (ces)
      uses: scacap/action-surefire-report@v1.7.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: '**/target/surefire-reports/TEST-*.xml'
        commit: ${{ github.event.workflow_run.head_commit.id }}
        check_name: ${{ matrix.setup }} test reports
